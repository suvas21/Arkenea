@model DAL.Models.UserProfile

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Update User</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            margin: 0;
            padding: 0;
        }

        h2 {
            color: #333;
        }

        form {
            max-width: 600px;
            margin: 20px auto;
            padding: 20px;
            background-color: #fff;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        label {
            display: block;
            margin-bottom: 8px;
            color: #333;
        }

        input {
            width: 100%;
            padding: 8px;
            margin-bottom: 16px;
            box-sizing: border-box;
            border: 1px solid #ccc;
            border-radius: 4px;
        }

        button {
            background-color: #4caf50;
            color: #fff;
            padding: 10px 15px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

            button:hover {
                background-color: #45a049;
            }
    </style>
</head>
<body>
    <div style="margin-bottom:20px">
    <h2>Update User</h2>

        <input type="hidden" id="Id" name="Id" value="@Model.Id" />
        <input type="hidden" id="UserId" name="UserId" value="@Model.UserId" />

        <label for="FirstName">First Name:</label>
        <input type="text" id="FirstName" name="FirstName" value="@Model.FirstName" required>

        <label for="LastName">Last Name:</label>
        <input type="text" id="LastName" name="LastName" value="@Model.LastName" required>

        <label for="Email">Email:</label>
        <input type="email" id="Email" name="Email" value="@Model.Email" required>

        <label for="Phone">Phone:</label>
        <input type="tel" id="Phone" name="Phone" value="@Model.Phone">

        <label for="Address">Address:</label>
        <input type="text" id="Address" name="Address" value="@Model.Address">

        <label for="profileFile">Document:</label>
        <input type="file" id="profileFile" name="profileFile">

        @if (!string.IsNullOrEmpty(Model.ProfilePicturePath))
        {
            <div id="documentContainer">

                <a href="@Model.ProfilePicturePath" download="document">
                    <button type="button">Download</button>
                </a>


                <span class="delete-icon" onclick="removeDocument()">❌</span>
            </div>
        }


        <label for="RoleId">Role:</label>
        <select id="RoleId" name="RoleId" value="@Model.RoleId">
            <option value="1">Admin</option>
            <option value="2">User</option>
        </select>

        <button type="button" onclick="submitForm()">Submit</button>
        
</div>

    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script>
        function submitForm() {

            const firstName = $('#FirstName').val();
            const lastName = $('#LastName').val();
            const email = $('#Email').val();
            const phone = $('#Phone').val();
            const address = $('#Address').val();
            const profileFile = $('#profileFile')[0].files[0];
            const roleId = $('#RoleId').val();
            const userId = $('#UserId').val();
            const id = $('#Id').val();

            // Construct the data object
            const userData = new FormData();
            userData.append('FirstName', firstName);
            userData.append('LastName', lastName);
            userData.append('Email', email);
            userData.append('Phone', phone);
            userData.append('Address', address);
            userData.append('RoleId', roleId);
            userData.append('UserId', userId);
            userData.append('Id', id);
            userData.append('profileFile', profileFile);

            // Make AJAX call using jQuery
            $.ajax({
                url: '/Users/UpdateUser',
                type: 'POST',
                data: userData,
                contentType: false,

                processData: false,
                success: function (response) {

                    console.log('User created successfully:', response);
                    window.location.href = "/Users/UserDetail?userId=" + response.userId;
                },
                error: function (error) {
                    console.error('Error creating user:', error);
                    // Handle error, e.g., show an error message to the user
                }
            });
        }

        function removeDocument() {

            var documentContainer = document.getElementById('documentContainer');

            if (documentContainer) {
                documentContainer.remove();
            }

            var fileInput = document.getElementById('profileFile');
            if (fileInput) {
                fileInput.value = ''; // Clear the file input value
            }
        }
    </script>

</body>
